# Makefile for building the JAWS3 library with Borland C++ Make

NAME = JAWS3

NO_FULL_PATH=1

OBJFILES = \
	$(OBJDIR)\Asynch_IO.$(OBJ_EXT) \
	$(OBJDIR)\Concurrency.$(OBJ_EXT) \
	$(OBJDIR)\Config_File.$(OBJ_EXT) \
	$(OBJDIR)\Datagram.$(OBJ_EXT) \
	$(OBJDIR)\Event_Completer.$(OBJ_EXT) \
	$(OBJDIR)\Event_Dispatcher.$(OBJ_EXT) \
	$(OBJDIR)\FILE.$(OBJ_EXT) \
	$(OBJDIR)\IO.$(OBJ_EXT) \
	$(OBJDIR)\Options.$(OBJ_EXT) \
	$(OBJDIR)\Protocol_Handler.$(OBJ_EXT) \
	$(OBJDIR)\Reactive_IO.$(OBJ_EXT) \
	$(OBJDIR)\Signal_Task.$(OBJ_EXT) \
	$(OBJDIR)\Symbol_Table.$(OBJ_EXT) \
	$(OBJDIR)\Synch_IO.$(OBJ_EXT) \
	$(OBJDIR)\Task_Timer.$(OBJ_EXT) \
	$(OBJDIR)\Templates.$(OBJ_EXT) \
	$(OBJDIR)\THYBRID_Concurrency.$(OBJ_EXT) \
	$(OBJDIR)\Timer.$(OBJ_EXT) \
	$(OBJDIR)\Timer_Helpers.$(OBJ_EXT) \
	$(OBJDIR)\TPOOL_Concurrency.$(OBJ_EXT) \
	$(OBJDIR)\TPR_Concurrency.$(OBJ_EXT)

LFLAGS = \
        -L"." \
        -j"."  \
        -L"..\..\..\lib" \
        -j"..\..\..\lib" 

LIBFILES = \
	ACE$(LIB_DECORATOR).lib \
	$(DUMMY_VALUE_NOT_ENDING_IN_BACKSLASH)

!ifdef STATIC
LIB_FLAGS = \
        -DACE_AS_STATIC_LIBS
!else
DLL_FLAGS = \
        -DJAWS_BUILD_DLL
!endif

CFLAGS = \
	-I"..\..\.." \
	-I".." \
	$(LIB_FLAGS) \
	$(DLL_FLAGS)

CPPDIR = .
CDIR   = .

INCDIR_NAME = stage-29192\ACE_wrappers\apps\JAWS3\jaws3

#
# pkgconfig_files rules
#


#
# Override defaults in outputdir.bor
#
INCLUDES_INSTALL=1
BINDIR = ..\..\..\lib

!include <$(ACE_ROOT)\include\makeinclude\build_library.bor>

includes_install: $(INCLUDES)
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Asynch_IO.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Asynch_IO.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Asynch_IO_Helpers.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Asynch_IO_Helpers.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Cached_Allocator_T.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Cached_Allocator_T.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Concurrency.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Concurrency.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Concurrency_T.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Concurrency_T.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Config_File.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Config_File.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Datagram.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Datagram.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Event_Completer.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Event_Completer.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Event_Dispatcher.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Event_Dispatcher.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Event_Result.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Event_Result.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Export.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Export.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y FILE.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\FILE.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y IO.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\IO.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Options.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Options.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Protocol_Handler.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Protocol_Handler.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Reactive_IO.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Reactive_IO.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Reactive_IO_Helpers.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Reactive_IO_Helpers.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Signal_Task.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Signal_Task.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Symbol_Table.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Symbol_Table.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Synch_IO.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Synch_IO.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Task_Timer.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Task_Timer.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y THYBRID_Concurrency.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\THYBRID_Concurrency.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Timer.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Timer.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Timer_Helpers.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\Timer_Helpers.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y TPOOL_Concurrency.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\TPOOL_Concurrency.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y TPR_Concurrency.h $(INSTALL_DIR)\include\$(INCDIR_NAME)\TPR_Concurrency.h 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Cached_Allocator_T.cpp $(INSTALL_DIR)\include\$(INCDIR_NAME)\Cached_Allocator_T.cpp 1> NUL
	-@if not exist $(INSTALL_DIR)\include\$(INCDIR_NAME)\. mkdir $(INSTALL_DIR)\include\$(INCDIR_NAME)\.
	-&copy /Y Concurrency_T.cpp $(INSTALL_DIR)\include\$(INCDIR_NAME)\Concurrency_T.cpp 1> NUL

realclean:
        @-rem

